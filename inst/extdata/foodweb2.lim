=====================================================
file: foodweb2.lim
Meiofauna feeds on labile detritus.
Meiofauna and macrofauna defecate into both labile and refractory detritus.
Meiofauna and macrofauna both also deposit carbon due to mortality into the labile compartment.
  IN          OUT       OUT
  /            /         /
 LABILE ----> MEIO --->  MACRO
  ^_____________/ <________/  defecation + mortality
 REFRAC <------/ <--------/   defecation
  /
  OUT
=====================================================

## EXTERNAL
IN  ! import
OUT ! export
## END EXTERNAL

## COMPONENT
LABILE = 30 {g C m-2} ! Labile detritus
REFRAC = 20 {g C m-2} ! Refractory detritus
MEIO   = 10 {g C m-2} ! Meiofauna
MACRO  = 5  {g C m-2} ! Macrofauna
## END COMPONENT

## FLOWS
import      : IN -> LABILE
export      : REFRAC -> OUT

!-- Meiofauna processes
! in
meioGrazDet : LABILE -> MEIO
! out
meioDefLab  : MEIO -> LABILE
meioMort    : MEIO -> LABILE
meioDefRefrac : MEIO -> REFRAC
meioResp    : MEIO -> OUT

!-- Macrofauna processes
! in
macroPredMeio : MEIO -> MACRO
!out
macroDefLab : MACRO -> LABILE
macroMort   : MACRO -> LABILE
macroDefRefrac : MACRO -> REFRAC
macroResp    : MACRO -> OUT
## END FLOWS

## PARAMETERS
! Measured data
meiDefrate  = 6 {g C m-2}
macDefrate  = 3 {g C m-2}

! Data from literature (min max values)
! AE constraints
meiAEmin = 0.5 {fraction}
meiAEmax = 0.9 {fraction}
macAEmin = 0.4 {fraction}
macAEmax = 0.8 {fraction}
! GE constraints
meiGEmin = 0.4 {fraction}
meiGEmax = 0.8 {fraction}
macGEmin = 0.3 {fraction}
macGEmax = 0.7 {fraction}
## END PARAMETERS

## VARIABLES
!-- Should only be addition or subtraction of flows and variables.
!-- Declare variable before you use it for another variable.

! Total defecation
meiDef = meiDefLab + meiDefRefrac
macDef = macDefLab + macDefRefrac

! Assimilation
meiAss = flowto(MEIO) - meiDef
macAss = flowto(MACRO) - macDef

! Secondary production (growth)
meiGrowth = meiAss - meiResp
macGrowth = macAss - macResp
## END VARIABLES

## Equalities
! Flows or variables that can only have one value
meiDef = meiDefRate
macDef = macDefRate
## End equalities

## Inequalities
! Flows or variables that can have a range of values
! Assimilation
meiAss = flowto(MEIO) * [meiAEmin, meiAEmax]
macAss = flowto(MACRO) * [macAEmin, macAEmax]

! Secondary production (growth)
meiGrowth = meiAss * [meiGEmin, meiGEmax]
macGrowth = macAss * [macGEmin, macGEmax]
## End inequalities
